<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">


  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Dashboard</title>

  <link rel="stylesheet" href="css/dashboard.css"> <!-- Link to your CSS file -->

  <link rel="stylesheet" href="css/navbar.css"> <!-- Link to your CSS file -->
  <link rel="stylesheet" href="/css/_default.css">
  <style>
   
.chatbot-btn {
  position: fixed;
  bottom: 20px;  /* Distance from the bottom of the screen */
  right: 20px;   /* Distance from the right of the screen */
  background-color: #ff00c3;  /* Button color */
  color: white;  /* Text color */
  border: none;  /* Remove border */
  border-radius: 50px;  /* Rounded corners */
  padding: 15px 20px;  /* Button padding */
  font-size: 16px;  /* Font size */
  cursor: pointer;  /* Cursor changes to pointer */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);  /* Light shadow */
  transition: background-color 0.3s ease, transform 0.3s ease;  /* Smooth transition */
}

.chatbot-btn:hover {
  background-color: #fe64da;  /* Darker shade on hover */
  transform: scale(1.1);  /* Slightly increase button size on hover */
}

.chatbot-btn:active {
  transform: scale(0.98);  /* Slight shrink on click */
}
/* Chatbot Popup Styling */
#chatbot-popup {
  position: fixed;
  bottom: 20px; /* Space from the bottom of the screen */
  right: 20px; /* Space from the right side of the screen */
  width: 300px; /* Adjust width as needed */
  max-height: 500px; /* Maximum height of the popup */
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  padding: 15px;
  display: none;
  z-index: 1000;
  overflow: auto;
}

/* Container Styling */
.chatbot-container {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

/* Close Button */
#close-chatbot {
  background: transparent;
  border: none;
  font-size: 18px;
  color: #333;
  cursor: pointer;
  text-align: right;
  padding: 0;
  margin: -10px -10px 10px 0;
}

/* Close button hover effect */
#close-chatbot:hover {
  color: red;
}

/* Textarea Styling */
#user-prompt {
  resize: none;
  width: 100%;
  height: 100px;
  padding: 10px;
  border-radius: 5px;
  border: 1px solid #ccc;
  font-size: 14px;
  color: #333;
  background-color: #f9f9f9;
}

#user-prompt:focus {
  border-color: #007bff;
  outline: none;
}

/* Send Button */
#send-prompt {
  padding: 10px;
  background-color: #ff00c3;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.3s;
}

/* Send button hover effect */
#send-prompt:hover {
  background-color: #ff51d6;
}

/* Send button active effect */
#send-prompt:active {
  background-color: #003c7b;
}

/* Chatbot Response Area */
#chatbot-response {
  font-size: 14px;
  color: #333;
  padding-top: 10px;
  white-space: pre-wrap;
}

/* Add some styling to the chatbot response area (to display the result better) */
#chatbot-response p {
  margin: 5px 0;
  padding: 5px;
  background-color: #f1f1f1;
  border-radius: 5px;
}


  </style>


</head>

<body>
  <%- include('_navbar') %>

  <div class="dashboard-content">
    <center>
      <h1>Welcome, <%= user.name %>!</h1>
    </center>
    <div class="events-list">
      <% events.reverse().forEach(event => { 
                const currentTime = new Date();
                const registrationOpen = currentTime < event.registrationEnd;
                const eventStarted = currentTime >= event.dateOfEvent;
                const eventEnded = currentTime > event.eventEndTime;
                const feedbackAvailable = eventStarted;
            %>

      <div class="event-item ">
        <div class="event-main-content">
          <div class="event-image">
            <img src="/<%= event.eventPoster %>" alt="Event Poster">
          </div>
          <div class="event-details" >
            <h3><%= event.eventName %></h3>
            <p><%= event.description %></p>
            <p><strong>Venue:</strong> <%= event.venue %></p>
            <p><strong>Date:</strong> <%= event.dateOfEvent.toLocaleDateString() %></p>
            <p><strong>Time:</strong> <%= event.eventStartTime %> - <%= event.eventEndTime %></p>

            <!-- Button container to hold buttons side by side -->
            <div class="event-buttons">
              <!-- Register button -->
              <% if (registrationOpen) { %>
              <% if (event.registeredUsers.includes(user._id)) { %>
              <a href="/register/<%= event._id %>" class="register-btn agree">Registered</a>
              <% } else { %>
              <a href="/register/<%= event._id %>" class="register-btn agree">Register</a>
              <% } %>
              <% } else { %>
              <button class="register-btn disabled">closed</button>
              <% } %>

              <!-- Volunteer button -->
              <% if (registrationOpen) { %>
              <% if (event.registeredVolunteers.includes(user._id)) { %>
              <a href="/volunteer/<%= event._id %>" class="register-btn agree">Volunteering</a>
              <% } else { %>
              <a href="/volunteer/<%= event._id %>" class="register-btn agree">Volunteer</a>
              <% } %>
              <% } else { %>
              <button class="register-btn disabled">closed</button>
              <% } %>


              <!-- Attendance button -->
              <% const currentDate = new Date(); %>
              <% const eventDate = new Date(event.dateOfEvent); %>

              <!-- Check if today's date is the event date -->
              <% if (currentDate.toDateString() === eventDate.toDateString()) { %>

              <% if (eventStarted) { %>
              <!-- Check if the user is the event creator -->
              <% if (event.creator.equals(user._id)) { %>
              <!-- Admin (Event Creator) will be redirected to scan QR codes for marking attendance -->
              <a href="/admin/attendance/<%= event._id %>" class="attendance-btn">Scan QR Code</a>

              <!-- Check if the user is a registered participant or volunteer -->
              <% } else if (event.registeredUsers.includes(user._id) || event.registeredVolunteers.includes(user._id)) { %>
              <!-- Normal user will be able to view their QR code for the event -->
              <a href="/attendance/<%= event._id %>" class="attendance-btn">Show QR Code</a>
              <% } else { %>
              <!-- If the user is neither admin nor participant/volunteer, show nothing -->
              <% } %>

              <% } else { %>
              <!-- Attendance is not available outside event time -->
              <button class="attendance-btn disabled" style="font-size:14px;">attendance</button>
              <% } %>

              <% } %>




        
                <!-- Check if the user is a registered participant or volunteer -->
                <% if (feedbackAvailable&&(event.registeredUsers.includes(user._id) || event.registeredVolunteers.includes(user._id))) { %>

                <a href="<%= event.googleFormLink %>" class="feedback-btn">Give Feedback</a>

                <% } else { %>

                <button class="feedback-btn disabled" style="font-size:14px;">Feedback</button>
                <% } %>


            </div>


            <!-- Only show delete button for the event creator -->
            <% if (user._id.toString() === event.creator.toString() || user.email==="srujanmpadmashali@gmail.com" ) { %>
            <form action="/admin/deleteevent/<%= event._id %>" method="POST" class="delete-form">
              <button type="submit" class="delete-btn">
                <img src="/images/bin.png" alt="Delete" class="delete-icon">
              </button>
            </form>
            <% } %>


            <form action="/event/<%= event._id %>" method="GET" class="more-form">
              <button type="submit" class="more-btn">
                <img src="/images/more.png" alt="More" class="more-icon">
              </button>
            </form>

          </div>
        </div>
        <div class="registration-stats">
          <div class="stat-item">
            <div class="stat-label">Participants</div>
            <div class="stat-value"><%= event.registeredUsers.length %>/<%= event.maxParticipants %></div>
          </div>
          <div class="stat-item">
            <div class="stat-label">Volunteers</div>
            <div class="stat-value"><%= event.registeredVolunteers.length %>/<%= event.maxVolunteers %></div>
          </div>
        </div>
      </div>
      <% }) %>
    </div>
  </div>

  <!-- Add a Chatbot button -->
<button id="chatbot-btn" class="chatbot-btn"> üí¨</button>

<!-- Chatbot popup/modal -->
<div id="chatbot-popup" style="display: none;">
  <div class="chatbot-container">
    <button id="close-chatbot">‚ùå</button>

    <textarea id="user-prompt" placeholder="Ask something..." style="width:100%"></textarea>
    <button id="send-prompt">Send</button>
    <div id="chatbot-response"></div>
  </div>
</div>


<script>
 const sendPromptButton = document.getElementById("send-prompt");
const userPromptInput = document.getElementById("user-prompt");
const chatbotResponseDiv = document.getElementById("chatbot-response");
const closeChatbot = document.getElementById("close-chatbot");
const chatbotPopup = document.getElementById("chatbot-popup");

// Open the chatbot popup when the chatbot button is clicked
document.getElementById("chatbot-btn").addEventListener("click", () => {
  chatbotPopup.style.display = "block";
});

// Close the chatbot popup when the close button is clicked
closeChatbot.addEventListener("click", () => {
  chatbotPopup.style.display = "none";
});

// Trigger the send button click on Enter key press
userPromptInput.addEventListener("keydown", (event) => {
  if (event.key === "Enter" && !event.shiftKey) {
    event.preventDefault();  // Prevents adding a new line to the textarea
    sendPromptButton.click();  // Simulate click on the send button
  }
});

// Handle send button click
sendPromptButton.addEventListener("click", async () => {
  const prompt = userPromptInput.value;
  if (prompt.trim() === "") return;

  try {
    const response = await fetch("/api/chatbot/generate-response", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ prompt }),
    });

    const data = await response.json();
    if (data.success) {
      chatbotResponseDiv.innerHTML = "<strong>Response:</strong><p style=\"color:black;font-size:12px;\">" + data.response + "</p>";
    } else {
      chatbotResponseDiv.innerHTML = "<strong>Error:</strong><p>" + data.error + "</p>";
    }
  } catch (error) {
    chatbotResponseDiv.innerHTML = "<strong>Error:</strong><p>There was an error connecting to the server.</p>";
  }
});

</script>





  <script>
    // Confirmation for registration
    document.querySelectorAll('.agree').forEach(button => {
      button.addEventListener('click', function(event) {
        const confirmAction = confirm('Are you sure you want to');
        if (!confirmAction) {
          event.preventDefault();
        }
      });
    });
  </script>


</body>

</html>